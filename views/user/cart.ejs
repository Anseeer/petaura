<%- include("../partials/user/header.ejs") %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart Page</title>
    <!-- Bootstrap CDN -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

    <style>
        body {
            background-color: #ffffff;
            font-family: Arial, sans-serif;
        }

        .cart-title {
            font-size: 2rem;
            font-weight: bold;
            margin: 30px 0;
        }

        .cart-container {
            margin: 0 auto;
            padding: 5rem;
        }

        .product-img {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 5px;
        }

        .remove-btn {
            background-color: #f00;
            color: white;
            border: none;
            border-radius: 50%;
            font-size: 12px;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            width: 14px;
            height: 14px;
            position: absolute;
            top: 10px;
            left: 10px;
        }

        .order-summary {
            border: 1px solid #ddd;
            border-radius: 10px;
            padding: 20px;
            background-color: #fff;
        }

        .checkout-btn {
            background-color: #000;
            color: #fff;
            font-weight: bold;
            width: 100%;
        }
        .checkout-btn:hover{
            background-color: grey;
            color: black;
        }

        .cart-item {
            position: relative;
            display: flex;
            align-items: center;
            gap: 20px;
            margin-bottom: 20px;
        }

        .quantity-control {
            display: flex;
            align-items: center;
        }

        .quantity-control button {
            border: 1px solid #000;
            background: transparent;
            padding: 5px 10px;
            font-size: 14px;
        }

        .quantity-control input {
            width: 40px;
            text-align: center;
            margin: 0 5px;
        }

        .order-summary hr {
            margin: 10px 0;
        }
        .empty{
        display: flex;
        justify-content: center;
        align-items: center;
        height: 200px;
        padding-left: 302px;
        
    }
    </style>
</head>
<body>
    <div class="container cart-container">
        <!-- Cart Title -->
        <div class="text-center cart-title">CART <i class="fas fa-shopping-cart"></i></div>
        
        <!-- Main Content -->
        <div class="row">
            <!-- Product List -->
           <!-- Product List -->
<div id="cart-products" class="col-md-8">
    <%if(cart.items.length > 0 ){%>
    <% for (let i = 0; i < cart.items.length; i++) { %>
      <div class="cart-item">
        <button class="remove-btn" onclick="return removeFromCart(event, '<%= cart.items[i].productId._id %>')">&times;</button>
        <!-- Product Image -->
        <img src="<%= cart.items[i].productId.Image[0] %>" alt="<%= cart.items[i].productId.name %>" class="product-img">
        <!-- Product Name -->
        <div>
          <div class="fw-bold"><%= cart.items[i].productId.name %></div>
          <a href="/user/viewMoreDetails?id=<%=cart.items[i].productId._id %>" class="text-primary text-decoration-none">VIEW MORE DETAILS</a>
        </div>
        <!-- Product Price -->
        <div class="ms-auto text-warning fw-bold">₹<%= cart.items[i].productId.finalPrice %></div>
        <!-- Quantity -->
        <div class="quantity-control">
            <button class="decrease" id="decrease" onclick="decreaseQty(event, '<%= cart.items[i]._id %>', '<%= cart.items[i].productId.quantity %>')">-</button>
            <input type="number" id="quantity-<%= cart.items[i]._id %>" value="<%= cart.items[i].quantity %>" class="quantity-input" readonly>
            <button class="increase" id="increase" onclick="increaseQty(event, '<%= cart.items[i]._id %>', '<%= cart.items[i].productId.quantity %>')">+</button>
        </div>
        
        
      </div>
    <% } %>
    <%}else{%>
        <p class="empty">Your Cart is empty. <a href="/user/">Shop now</a> to add items.</p>
        <%}%>
  </div>
  
        <% if(cart.items.length >0 ){%>
            <!-- Order Summary -->
            <div id="cart-summury" class="col-md-4">
                <div class="order-summary">
                    <h5 class="fw-bold">Order Summary</h5>
                    <div class="d-flex justify-content-between">
                        <span>Subtotal</span>
                        <span id="subTotal">₹<%= cart.totalPrice.toFixed(2) %></span>
                    </div>
                    <div class="d-flex justify-content-between">
                        <% if (cart.totalPrice < 500) { %>
                            <span>Delivery:</span>
                            <span id="deliveryFee">₹ 40</span>
                        <% } else { %>
                            <span>Delivery:</span>
                            <span id="deliveryFee">Free</span>
                        <% } %>
                    </div>
                    
                    
                    <hr />
                    <div class="d-flex justify-content-between fw-bold">
                        <span>Total</span>
                        <% if(cart.totalPrice < 500){ %>
                            <span id="totalPrice">₹<%= (cart.totalPrice + 40).toFixed(2) %> </span>
                            <%} else {%>
                            <span id="totalPrice">₹<%= cart.totalPrice.toFixed(2)  %> </span>
                            <% } %>
                    </div>
                    <a href="/user/checkout-page"><button class="btn checkout-btn mt-3">Checkout</button></a>
                    <div class="text-center mt-2">
                        <a href="/user/" class="text-dark text-decoration-none"><u>Continue Shopping</u></a>
                    </div>
                </div>
            </div>
            <%}else{%>

                <%}%>
        </div>
    </div>

    <!-- Bootstrap Script -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>

    <script>

function decreaseQty(event, productId, quantity) {
    const input = document.getElementById(`quantity-${productId}`);
    let currentQty = parseInt(input.value);

    if (currentQty > 1) {
        currentQty--;
        input.value = currentQty;
        updateCart(productId, currentQty, quantity); // Update the cart on the backend
    } else {
        Swal.fire({
            icon:"error",
            title:"Minimum quantity is 1",
            showCancelButton:false,
            showConfirmButton:false,
            timer:1500
        })
    }
}

function increaseQty(event, productId, quantity) {
    console.log("the quantity is:",quantity);
    const input = document.getElementById(`quantity-${productId}`);
    let currentQty = parseInt(input.value);

    if (currentQty < quantity) {
        currentQty++;
        input.value = currentQty;
        updateCart(productId, currentQty, quantity); // Update the cart on the backend
    } else {
        Swal.fire({
            icon:"error",
            title:"Cannot exceed available stock",
            showCancelButton:false,
            showConfirmButton:false,
            timer:1500
        })
    }
}

function updateCart(productId,currentQty ,quantity) {
    console.log("Update","productId",productId,"currentQty:",currentQty,"quan:",quantity);
    fetch('/user/update-cart', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId, currentQty }),
    })
        .then((response) => response.json()) 
        .then((data) => {

            if (data.success) {
                console.log("Cart updated successfully.")
                const Subtotal = document.getElementById("subTotal");
                const totalPrice = document.getElementById("totalPrice");
                const deliveryFee = document.getElementById("deliveryFee");
                Subtotal.textContent = `₹${data.cart.totalPrice}`
                totalPrice.textContent = data.cart.totalPrice > "500" ? `₹${data.cart.totalPrice}`:`₹${data.cart.totalPrice + 40}`;
                deliveryFee.textContent = data.cart.totalPrice > "500" ? "Free" : "₹40";
            } else {
                Swal.fire({
                    icon:"error",
                    title:data.message || "Failed to update cart",
                    showCancelButton:false,
                    showConfirmButton:false,
                    timer:1500
                })
                const input = document.getElementById(`quantity-${productId}`);
                input.value = quantity > quantity ? quantity : 1;
            }
        })
        // .then(()=> window.location.reload())
        .catch((error) => console.error("Error updating cart:", error));
}


    //  removeFromCart 
        function removeFromCart(event, productId) {
            event.preventDefault(); // Prevent default form submission
        
            fetch(`/user/remove-from-cart?productId=${productId}`, {
                method: "GET",
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then((res) => res.json())
            .then((data) => {
                console.log("Data:",data.datas)
                if (data.success) {
                    Swal.fire({
                        icon: "success",
                        title: "Removed",
                         showCancelButton: false,
                        showConfirmButton: false,
                        timer: 1500,
                    })
                    location.reload();

                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Failed to Remove",
                        text: data.message,
                        showCancelButton: false,
                        showConfirmButton: false,
                        timer: 1500,
                    });
                }
            })
            .catch(() => {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "An error occurred while removing the item.",
                    showCancelButton: false,
                    showConfirmButton: false,
                    timer: 1500,
                });
            });
        }

//         document.addEventListener("DOMContentLoaded",()=>{
//             fetch("/user/fetchCart",{
//                 method:"GET",
//                 headers:{
//                     'Content-Type':'application',
//                 }
//             })
//             .then((res)=> res.json())
//             .then((res)=>{
//                 if(res.success){
//                     console.log("res:",res)
//                     fetchCartData(res.cart);
//                 }else{
//                     Swal.fire({
//                         icon:"error",
//                         title:"Faild To Fetch  Cart Data`s ",
//                         showCancelButton:false,
//                         showConfirmButton:false,
//                         timer:1200,
//                     })
//                 }
//             })
//             .catch(()=>{
//                 Swal.fire({
//                         icon:"error",
//                         title:"Error In Fetch  Cart Data`s ",
//                         showCancelButton:false,
//                         showConfirmButton:false,
//                         timer:1200,
//                     })
//             })
//         })
//         function fetchCartData(cart) {
//     const product = document.getElementById("cart-products");
//     const summury = document.getElementById("cart-summury");
//     product.innerHTML = "";
//     summury.innerHTML = "";

//     cart.items.forEach((item) => {
//         let productData = ` 
//             <div class="cart-item">
//                 <button class="remove-btn" onclick="return removeFromCart(event, '${item.productId._id}')">&times;</button>
//                 <!-- Product Image -->
//                 <img src="${item.productId.Image[0]}" alt="${item.productId.name}" class="product-img">
//                 <!-- Product Name -->
//                 <div>
//                     <div class="fw-bold">${item.productId.name}</div>
//                     <a href="/user/viewMoreDetails?id=${item.productId._id}" class="text-primary text-decoration-none">VIEW MORE DETAILS</a>
//                 </div>
//                 <!-- Product Price -->
//                 <div class="ms-auto text-warning fw-bold">₹${item.productId.finalPrice}</div>
//                 <!-- Quantity -->
//                 <div class="quantity-control">
//                     <button class="decrease" id="decrease" onclick="decreaseQty(event, '${item._id}', '${item.productId.quantity}')">-</button>
//                     <input type="number" id="quantity-${item._id}" value="${item.quantity}" class="quantity-input" readonly>
//                     <button class="increase" id="increase" onclick="increaseQty(event, '${item._id}', '${item.productId.quantity}')">+</button>
//                 </div>
//             </div>
//         `;
//         product.innerHTML += productData;
//     });

//     // Calculate delivery fee and total price dynamically
//     const deliveryFee = cart.totalPrice < 500 ? 40 : 0;
//     const totalPrice = cart.totalPrice + deliveryFee;

//     summury.innerHTML = `
//         <div class="order-summary">
//             <h5 class="fw-bold">Order Summary</h5>
//             <div class="d-flex justify-content-between">
//                 <span>Subtotal</span>
//                 <span id="subTotal">₹${cart.totalPrice.toFixed(2)}</span>
//             </div>
//             <div class="d-flex justify-content-between">
//                 <span>Delivery:</span>
//                 <span id="deliveryFee">₹${deliveryFee > 0 ? deliveryFee : 'Free'}</span>
//             </div>
//             <hr />
//             <div class="d-flex justify-content-between fw-bold">
//                 <span>Total</span>
//                 <span id="totalPrice">₹${totalPrice.toFixed(2)}</span>
//             </div>
//             <a href="/user/checkout-page"><button class="btn checkout-btn mt-3">Checkout</button></a>
//             <div class="text-center mt-2">
//                 <a href="/user/" class="text-dark text-decoration-none"><u>Continue Shopping</u></a>
//             </div>
//         </div>
//     `;
// }

        
    </script>
</body>
</html>

<%- include("../partials/user/footer.ejs") %>  
