<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Petaura</title>
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Local or other external CSS -->
    <link rel="stylesheet" href="/style/Style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

</head>
<body>
<div class="container-fluid">
    <!-- navbar start -->
    <div class="container-fluid" style="height: 90px;">
        <div class="row navrow">
            <div class="col-2 name">Petaura</div>
            <div class="col-6 searchbar">
                <div class="container my-4">
                    <form class="d-flex" onsubmit="Search(event)" role="search"
                          style="border: 1px solid #ccc; border-radius: 25px; overflow: hidden; background-color: white;">
                        <input class="form-control" id="search" type="search" placeholder="what are you looking ?"
                               style="border: none; border-radius: 0; box-shadow: none; background-color: white;">
                        <button type="submit" class="btn btn-default btn-sm">
                            Search
                        </button>
                    </form>
                    <ul class="d-flex justify-content-center list-unstyled mt-3">
                        <li class="service1 mx-3">
                            <a href="/user" class="text-decoration-none text-dark">Home</a>
                        </li>
                        <li class="service2 mx-3">
                            <a href="/user/cat-supplies" class="text-decoration-none text-dark">Cat Supplies</a>
                        </li>
                        <li class="service2 mx-3">
                            <a href="/user/dog-supplies" class="text-decoration-none text-dark">Dog Supplies</a>
                        </li>
                        <li class="service2 mx-3">
                            <a href="/user/petBird-supplies" class="text-decoration-none text-dark">Pet Bird</a>
                        </li>
                        <li class="service2 mx-3">
                            <a href="/user/smallPets-supplies" class="text-decoration-none text-dark">Small Pets</a>
                        </li>
                        <li class="service2 mx-3">
                            <a href="/user/fish-supplies" class="text-decoration-none text-dark">Fishes</a>
                        </li>
                    </ul>
                    
                </div>
            </div>
            <div class="col-2 d-flex justify-content-around align-items-center">
                <!-- Heart Icon for Wishlist -->
                <a href="/user/whishlist" style="text-decoration: none; color: black;"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" class="feather feather-heart">
                    <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"></path>
                </svg></a>
            
               <!-- Cart Icon -->
              <a href="/user/cart" style="text-decoration: none; color: black;"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" class="feather feather-cart">
                <path d="M6 6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-2l-1-3H7L6 6zM4 8h16v12H4V8z"></path>
            </svg>
             </a>

              <!-- Profile Icon -->
              <div class="user-container">
                <div class="user-info">
                    <!-- User Icon -->
                     <%if(!user){%>
                    <div class="icon-container" onclick="toggleDropdown()">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" class="feather feather-user">
                            <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zM12 14c-4.41 0-8 2.24-8 5v2h16v-2c0-2.76-3.59-5-8-5z"></path>
                        </svg>
                    </div>
                    <%}else{%>
                        <div class="icon-container" onclick="toggleDropdown()">
                           <a href="/user/profile" style="color: black;"> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" class="feather feather-user">
                            <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zM12 14c-4.41 0-8 2.24-8 5v2h16v-2c0-2.76-3.59-5-8-5z"></path>
                        </svg></a>
                        </div>
                        <%}%>
                
                    <% if (user) { %>
                        <p class="user-name"><%= user.name %></p>
                    <% } else { %>
                        <p class="user-name empty"></p>
                    <% } %>
                
                    <!-- Dropdown Menu -->
                    <div class="dropdown-container">
                        <div class="dropdown-menu">
                            
                            <% if(!user){%>
                                <a href="/user/login">Login</a>
                                <a href="/user/Signup">Signup</a>
                            <% } %>
                        </div>
                    </div>
                </div>
                
            </div>
            
                
            </div>
            
            <!-- Add the following CSS -->
            <style>
    .user-container {
    position: relative;
    display: inline-block;
}

.user-info {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    cursor: pointer;
    width: 60px; /* Fixed width for consistent alignment */
}

.user-name {
    font-size: 14px;
    margin: 2px 0 0 0;
    text-align: center;
    min-height: 18px; /* Ensures space is reserved even when empty */
    color: #333;
}

.icon-container {
    display: flex;
    align-items: center;
    justify-content: center;
}
.user-info {
  position: relative;
  display: flex;
  align-items: center;
}

.icon-container {
  cursor: pointer;
}

.user-name {
  margin-left: 10px;
  font-size: 16px;
}

.user-name.empty {
  display: none; /* Hide when no user */
}

.dropdown-container {
  position: relative;
  display: inline-block;
}

.dropdown-menu {
  display: none; /* Hidden by default */
  position: absolute;
  top: 100%; /* Align below the button */
  right: 0; /* Align to the right */
  background-color: white;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border-radius: 5px;
  z-index: 1000;
  min-width: 150px;
}

.dropdown-menu a {
  padding: 8px 16px;
  display: block;
  text-decoration: none;
  color: black;
}

.dropdown-menu a:hover {
  background-color: #f0f0f0;
}

.dropdown-container.active .dropdown-menu {
  display: block; /* Show dropdown */
}

         
.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 20px;
  gap: 10px;
}

/* Pagination buttons */
.pagination a {
  display: inline-block;
  padding: 10px 15px;
  font-size: 14px;
  text-decoration: none;
  border-radius: 5px;
  color: #ffa500; /* Bootstrap's primary color */
  border: 1px solid #ffa500;
  transition: background-color 0.3s ease, color 0.3s ease;
}

/* Active button styling */
.pagination a.btn-secondary {
  background-color: #ffa500;
  color: #fff;
  cursor: default;
  pointer-events: none;
}

/* Hover effect for buttons */
.pagination a:hover {
  background-color: #ffa500; /* Darker shade of primary */
  color: #fff;
}

/* Disabled button styling */
.pagination a.disabled {
  color: #6c757d;
  border-color: #6c757d;
  cursor: not-allowed;
  pointer-events: none;
} 
a.active {
  background-color: #ffa500; /* Darker shade of primary */
    color: #007bff;
    font-weight: bold;
}



            </style>

            
        </div>
    </div>
    <!-- navbar end -->
</div>

<div aria-label="breadcrumb">
  <ol class="breadcrumb">
    <% breadcrumbs.forEach((crumb, index) => { %>
      <% if (index === breadcrumbs.length - 1) { %>
        <!-- Last breadcrumb -->
        <li class="breadcrumb-item active" aria-current="page"><%= crumb.text %></li>
      <% } else { %>
        <!-- Other breadcrumbs -->
        <li class="breadcrumb-item">
          <a href="<%= crumb.url %>"><%= crumb.text %></a>
        </li>
      <% } %>
    <% }); %>
  </ol>
</div>

<div class="container-fluid">
  <div class="row">
    <!-- Category Sidebar -->
    <div class="col-md-3">
      <div class="Ccategory-sidebar bg-light p-4 shadow rounded">
        <h5 class="fw-bold mb-3">Accossories Categoy:</h5>
        <ul class="list-unstyled">
          <li><a onclick="category(event,'<%= allProduct %>')" class="text-decoration-none text-dark py-2 d-block">All Products</a></li>
          <% for(let i=0 ; i < category.length ; i++){%>
          <li><a onclick="category(event,'<%= category[i]._id %>')" class="text-decoration-none text-dark py-2 d-block"><%=category[i].name%></a></li>
          <%}%>
        </ul>
        <hr class="my-4">
        <div class="sort-options mt-4">
          <h6 class="fw-bold mb-2">Sort By:</h6>
          <select class="form-select" onchange="Sort(event,this.value)">
            <option value="" disabled selected>Choose...</option>
            <option value="low-high">Price: Low to High</option>
            <option value="high-low">Price: High to Low</option>
            <option value="a-z">Name: A to Z</option>
            <option value="z-a">Name: Z to A</option>
          </select>
        </div>
      </div>
    </div>
    
    <!-- Product Section -->
    <div class="col-md-9">
      <section class="py-3">
        <div class="container">
          <div id="productContainer" class="row">
           
          </div>
          
<div id="pagination" class="pagination">
      
  </div>
        </div>
      </section>
    </div>
    
  </div>
</div>
<script>
 let filterState = {
    category: "<%= allProduct %>",
    sort: "",
    search: "",
  };

  // Search Function
  function Search(event) {
    event.preventDefault();
    let searchValue = document.getElementById("search").value;
    filterState.search = searchValue;
    fetchProducts(1);
  }

  // Category Filter Function
  function category(event, categoryValue) {
    event.preventDefault();
    document.querySelectorAll('ul.list-unstyled a').forEach(link => link.classList.remove('active'));
    event.currentTarget.classList.add('active');
    filterState.category = categoryValue;
    fetchProducts(1);
  }

  // Sorting Function
  function Sort(event, sortValue) {
    event.preventDefault();
    filterState.sort = sortValue;
    fetchProducts(1);
  }

  // Fetch Products with Filters Applied
  function fetchProducts(page) {
    const { category, sort, search } = filterState;
    
    // Update URL Parameters
    const urlParams = new URLSearchParams({
      category,
      sort,
      search,
      page,
    });
    history.pushState(null, '', `/user/treat?${urlParams.toString()}`);

    fetch(`/user/fillterCategoryOfAccessories?${urlParams.toString()}`, {
      method: "GET",
      headers: { 'Content-Type': 'application/json' },
    })
    .then(res => {
      if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);
      return res.json();
    })
    .then(data => {
      renderProducts(data.product, data.totalPage, data.currentPage);
    })
    .catch(err => {
      console.error("Error fetching products:", err);
      document.getElementById("productContainer").innerHTML = "<p>An error occurred while fetching products. Please try again later.</p>";
    });
  }

  // Render Products and Pagination
  function renderProducts(products, totalPage, currentPage) {
    const productContainer = document.getElementById("productContainer");
    const pagination = document.getElementById("pagination");
    productContainer.innerHTML = "";
    pagination.innerHTML = "";

    if (products.length === 0) {
      productContainer.innerHTML = "<p>No products found.</p>";
      return;
    }

    products.forEach((product, index) => {
      const productDetails = `
        <div class="col-md-4 mb-4">
          <a href="/user/ProuctDetailsOfAccessories?product=${product._id}" class="text-decoration-none">
            <div class="Ccard position-relative">
              <!-- Wishlist Button -->
              <span onclick="event.stopPropagation(); return addToWishlist(event, '${product._id}')">
                <button id="wishlist-btn-${index}" class="wishlist-btn btn btn-light p-2 rounded-circle position-absolute top-0 end-0 m-2">
                  <i class="fa fa-heart"></i>
                </button>
              </span>

              <!-- Product Image -->
              <img src="${product.Image[0]}" alt="Product Image" class="Ccard-img-top">

              <!-- Card Body -->
              <div class="Ccard-body" style="text-align: left;">
                <h5 class="Ccard-title">Name: ${product.name}</h5>
                <p class="Ccard-text">Brand</p>
              <p class="Ccard-text">Price: ₹${product.finalPrice} <strike>₹${product.salePrice}</strike></p>
                ${
                  product.Status === "Out of Stock" || product.quantity <= 0
                    ? `<p style="color: red;">Out of Stock</p>`
                    : `<span onclick="event.stopPropagation(); return addToCart(event, '${product._id}', '${index}')">
                        <button id="addToCart-${index}" class="btn btn-warning">Add to Cart</button>
                      </span>`
                }
              </div>
            </div>
          </a>
        </div>
      `;
      productContainer.innerHTML += productDetails;
    });

    pagination.innerHTML = `
      ${currentPage > 1 
        ? `<a href="#" class="btn" onclick="fetchProducts(${currentPage - 1}); return false;">Previous</a>`
        : `<a class="btn disabled">Previous</a>`
      }

      ${Array.from({ length: totalPage }, (_, i) => `
        <a href="#" class="btn ${currentPage === i + 1 ? 'btn-secondary' : ''}" 
           onclick="fetchProducts(${i + 1}); return false;">
           ${i + 1}
        </a>
      `).join('')}

      ${currentPage < totalPage 
        ? `<a href="#" class="btn" onclick="fetchProducts(${currentPage + 1}); return false;">Next</a>`
        : `<a class="btn disabled">Next</a>`
      }
    `;
  }

  // Restore State on Page Load
  document.addEventListener("DOMContentLoaded", () => {
    const params = new URLSearchParams(window.location.search);

    // Set filter state from URL
    filterState.category = params.get('category') || "<%= allProduct %>";
    filterState.sort = params.get('sort') || "";
    filterState.search = params.get('search') || "";

    // Apply UI state
    if (filterState.search) {
      document.getElementById("search").value = filterState.search;
    }

    if (filterState.sort) {
      document.querySelector(`select option[value="${filterState.sort}"]`).selected = true;
    }

    const activeCategory = document.querySelector(`a[href*='${filterState.category}']`);
    if (activeCategory) {
      activeCategory.classList.add('active');
    }

    fetchProducts(1);
  });

  function addToWishlist(e, id) {
  e.preventDefault();

  const button = e.currentTarget.querySelector('.wishlist-btn');


  if (button.style.color === 'white') {
    button.style.color = 'red';
    button.style.backgroundColor = 'white';
    fetch("/user/delete-from-whishlist",{
                    method:"POST",
                    headers:{
                        'Content-Type':'application/json'
                    },
                    body:JSON.stringify({id})
                })
                .then((response)=> response.json())
                .then((response)=>{
                  if(response.success){
                    console.log("removed");
                  }else{
                    console.log("Faild To Remove")
                  }
                })
                .catch(()=>{
                  console.log("Error");
                })
    
  } else {
    button.style.color = 'white';
    button.style.backgroundColor = 'red';
    console.log("Styart fetch")
    fetch("/user/add-to-whishlist",{
      method:"POST",
      headers:{
        'Content-Type':'application/json'
      },
      body:JSON.stringify({id})
    })
    .then((response)=> response.json())
    .then((response)=>{
      if(response.success){
        console.log("Sucessfully Added Whislist",response.message);
      }else{
        console.log("Faild To Add Whislist");
      }
    })
    .catch((err)=> console.log(err.message))

  }

  console.log('Toggled wishlist button for product ID:', id);
}



function addToCart(e, id,index) {
  console.log("Product ID:", id);  // Check if the ID is being passed correctly
  e.preventDefault();
  e.stopPropagation();
  const button = document.getElementById(`addToCart-${index}`);
  // Create a small badge (popup)
  const badge = document.createElement('span');
  badge.classList.add('badge', 'bg-success');
  badge.innerText = "Added to Cart";
  
  // Position the badge next to the button
  button.parentElement.appendChild(badge);

  // Set a timeout to remove the badge after a few seconds
  setTimeout(() => {
    badge.remove();
  }, 3000); // The badge will disappear after 3 seconds

  // Make the fetch request
  fetch(`/user/add-to-cart?productId=${id}`, {
    method: "GET",
    headers: {
      'Content-Type': 'application/json'
    },
  })
  .then((res) => res.json())
  .then((res) => {
    if (res.success) {
      console.log('Product added successfully');
    }
  });
}

</script>
<script>
  // Toggle Dropdown Functionality
function toggleDropdown() {
 const dropdownContainer = document.querySelector('.dropdown-container');
 dropdownContainer.classList.toggle('active');
}

// Close dropdown if clicked outside
document.addEventListener('click', (e) => {
 const dropdownContainer = document.querySelector('.dropdown-container');
 const iconContainer = document.querySelector('.icon-container');

 // Close dropdown if the click is outside the dropdown or icon
 if (!dropdownContainer.contains(e.target) && !iconContainer.contains(e.target)) {
     dropdownContainer.classList.remove('active');
 }
});

</script>
<%- include("../partials/user/footer.ejs") %>
