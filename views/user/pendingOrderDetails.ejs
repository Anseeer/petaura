
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Petaura - Order History</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
               body {
            margin: 0;
            font-family: 'Roboto', sans-serif;
            background-color: #f7f7f7;
        }

        /* Header Styling */
        .header {
            background: linear-gradient(90deg, #ffa500, #ff7f50);
            padding: 15px 20px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            position: fixed;
            width: 100%;
            z-index: 10;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .header .logo {
            font-size: 26px;
            font-weight: bold;
            color: white;
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);
        }

        /* Sidebar Styling */
        .sidebar {
            position: fixed;
            top: 70px; /* Start below the header */
            left: 0;
            width: 250px;
            height: calc(100% - 70px);
            background: linear-gradient(180deg, #ffa500, #ffd27f);
            color: white;
            padding-top: 10px;
            box-shadow: 3px 0 8px rgba(0, 0, 0, 0.2);
        }

        .sidebar a {
            display: flex;
            align-items: center;
            color: black;
            padding: 12px 20px;
            margin: 5px 15px;
            text-decoration: none;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .sidebar a:hover,
        .sidebar a.active {
            background: rgba(255, 255, 255, 0.3);
            color: white;
        }

        .sidebar i {
            margin-right: 10px;
            font-size: 18px;
        }

        /* Content Area */
        .content {
            margin-left: 270px;
            padding: 20px;
            padding-top: 100px; /* Push content down to not overlap with the fixed header */
        }

        
  /*  */
  
    body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f5f5f5;
  color: #fff;
}

.order-container {
  width: 80%;
  margin: 2rem auto;
  background:rgb(211, 196, 168);
  padding: 1.5rem;
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
}

h1, h3 {
  text-align: center;
}

.receipt-details {
  text-align: center;
  margin-bottom: 1.5rem;
}

.receipt-details span {
  color: #ddd;
}

.product-details {
  display: flex;
  align-items: center;
  gap: 1.5rem;
  padding: 1rem;
  border: 1px solid #f5f5f5;
  border-radius: 8px;
  margin-bottom: 1.5rem;
}

.product-details img {
  width: 100px;
  border-radius: 8px;
}

.product-info {
  flex: 1;
}

.product-info h2 {
  margin: 0;
  font-size: 1.5rem;
}

.product-info p {
  margin: 0.5rem 0;
  font-size: 1rem;
}

.actions {
  text-align: center;
  margin: 1rem 0;
}

.btn-disabled {
  background: #6d6868;
  color: #070606;
  border: none;
  padding: 0.5rem 1rem;
  margin: 0 0.5rem;
  border-radius: 4px;
  cursor: not-allowed;
}

.order-summary {
  text-align: left;
}

.order-summary p, .order-summary h4 {
  font-size: 1rem;
  margin: 0.5rem 0;
}

.order-summary span {
  color: #ddd;
}

.cost-details p {
  display: flex;
  justify-content: space-between;
}

.cancel-btn {
  display: block;
  width: 100%;
  padding: 0.8rem;
  background: #ff4d4d;
  border: none;
  color: #fff;
  border-radius: 8px;
  cursor: pointer;
  margin-top: 1rem;
}

.cancel-btn:hover {
  background: #e64545;
}
        
svg {
    color: #000000; /* Blue color */
    cursor: pointer; /* Pointer cursor for interactivity */
    transition: color 0.3s;
    width: 30px;
  }

  svg:hover {
    color: #ffffff; /* Darker blue on hover */
  }
    </style>
</head>

<body>

    <div class="header">
        <div class="logo">Petaura</div>
        <div class="d-flex end-0">
            <a href="/user" class="home-link" style="text-decoration: none;">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" width="48" height="48">
                    <path d="M12 3l7 6v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V9l7-6zm5 7.586V19h-3v-4H10v4H7v-8.414L12 5.414l5 5.172z" />
                </svg>
            </a>
        </div>
        </div>

    <div class="sidebar d-flex flex-column col-md-3 gap-2">
        <a href="/user/profile" class="">
            <i class="fas fa-user"></i> Account Details
        </a>
        <a href="/user/orderHistory" class="active">
            <i class="fas fa-clock"></i> Order History
        </a>
        <a href="/user/wallet">
            <i class="fas fa-wallet"></i> Wallet
        </a>
        <a href="/user/cart">
            <i class="fas fa-shopping-cart"></i> Shopping Cart
        </a>
        <a href="/user/wallet">
            <i class="fas fa-heart"></i> Wishlist
        </a>
        <a href="/user/address">
            <i class="fas fa-map-marker-alt"></i> Address
        </a>
        <a href="/user/referral">
            <i class="fas fa-user-friends"></i> Referral
        </a>
        <a href="/user/logOut">
            <i class="fas fa-sign-out-alt"></i> Log-out
        </a>
    </div>

    <div class="content">
  <div class="order-container">
    <h2 class="text-center" style="color:red;">Payment Failed</h2>
    <p class="text-center text-red" style="color:red;">Unfortunately, your payment could not be processed. Please try again.</p>    <div class="receipt-details">
      <h3>Receipt</h3>
      <p>Receipt Voucher: <span><%=pendingOrder.orderId%></span></p>
    </div>
    <% pendingOrder.orderedItems.forEach((item)=>{ %>
      <div class="product-details">
        <img src="<%= item.image %>" >
        <div class="product-info">
          <h2><%= item.name %></h2>
          <p><span></span></p>
          <p>Quantity: <span><%= item.quantity %></span></p>
          <p>Price: ₹<%= item.price %>  </p>
          <p>Status:<%= item.status %>  </p>
        </div>
      </div>
    <% }) %>
    <div class="actions">
     <button class="btn btn-secondary" onclick="rePayment(event,'<%= pendingOrder.razorPayOrderId %>')">Retry</button>
    </div>
    <div class="order-summary">
      <h3>Order Details</h3>
      <p>Payment Method: <span style="color:red;">Payemnt Faild</span> </p>
      <p>Address: <span>
        <%= `${pendingOrder.address[0].name}, ${pendingOrder.address[0].state}, ${pendingOrder.address[0].country}, ${pendingOrder.address[0].pincode}, Phone: ${pendingOrder.address[0].phone}` %>
    </span></p>
    
          <div class="cost-details">
        <p>Delivery Charges: ₹<%= pendingOrder.deliveryFee %></p>
        <p>Coupen Discount: ₹ <%= pendingOrder.discount %></p>
        <p>Total: ₹<%= pendingOrder.totalPrice %></p>
      </div>
    </div>
  </div>

</div>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>

  

function rePayment(event, razorPayOrderId) {
    event.preventDefault();
    console.log("orderId:", razorPayOrderId);
    console.log("1");

    // Send a request to update the pending order
    fetch("/user/updatePendingOrder", {
        method: "POST",
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ razorPayOrderId }),
    })
    .then((response) => {
        console.log("2");
        if (!response.ok) {
            throw new Error('Failed to fetch data');
        }
        return response.json(); // Return parsed JSON
    })
    .then((response) => {
        console.log("response:", response);
        console.log("3");

        if (response.success) {
            console.log("4");
            try {
                // Initialize Razorpay for the online payment
                const rzp = new Razorpay({
                    key: response.razorpayKey, // Your Razorpay key
                    amount: response.pendingOrder[0].finalPrice, // Amount to be paid in paise (1 INR = 100 paise)
                    currency: "INR", // Currency used for payment
                    order_id: response.pendingOrder[0].razorPayOrderId, // Razorpay order ID

                    // Handle payment success
                    handler: async (razorpayResponse) => {
                        try {
                            console.log("orderId",response.pendingOrder[0].orderId)
                            // Send the Razorpay payment response to your server for verification
                            const result = await fetch(`/user/verifyOnline-payment/${response.pendingOrder[0].orderId}`, {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json",
                                },
                                body: JSON.stringify(razorpayResponse),
                            })
                            .catch(err => {
                                // Handle network errors during the fetch request
                                console.error("Network Error:", err);
                                throw err;
                            });

                            // Parse the JSON response from the server
                            const verificationResult = await result.json();

                            // Check if payment verification was successful
                            if (verificationResult.success) {
                                // Redirect to order confirmation page
                                window.location.href = `/user/orderHistory`;
                            } else {
                                // Show error message if payment verification fails
                            }
                        } catch (err) {
                            // Handle errors that occur during payment verification
                            console.error("Verification Error:", err);
                        }
                    },

                    theme: {
                        color: "#3399cc", // Customize the color of the Razorpay modal
                    }
                });

                // Handle payment failure
                rzp.on("payment.failed", (response) => {
                    console.error("Payment Failed Response:", response);
                });

                // Open the Razorpay payment modal
                rzp.open();
            } catch (error) {
                console.error("Error during payment verification:", error);
                rzp.close();
            }
        } else {
            console.error("Failed to retrieve order details:", response.message);
        }
    })
    .catch((error) => {
        console.error("Error occurred:", error);
        Swal.fire({
            icon: "error",
            title: "Payment failed",
            text: "There was an issue with the payment process.",
            timer: 1500,
            showConfirmButton: false,
        });
    });
}


</script>
</body>

</html>
