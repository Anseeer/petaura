<!-- <style>
     /* Content Area */
     .content {
            margin-left: 270px;
            padding: 20px;
            padding-top: 100px; /* Push content down to not overlap with the fixed header */
        }


        /* address */
        .address-form {
            background-color: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .address-form h5 {
            margin-bottom: 20px;
            color: #333;
        }

        .form-control {
            margin-bottom: 15px;
        }

        .address-table {
            margin-top: 20px;
            border: 1px solid #ddd;
        }

        .address-table th {
            background-color: #ffa500;
            color: white;
        }
        .err-msg{
            color: red;
        }
</style> -->
<!-- SweetAlert2 CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<style>
    /* General Form Styling */
    .address-form {
        background-color: #ffffff;
        padding: 30px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        max-width: 800px;
        margin: auto;
        margin-top: 50px;
        position: relative;
    }

    /* Header with Cancel Icon */
    .address-form .header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 30px;
    }

    .address-form .header h5 {
        font-size: 1.5rem;
        color: #333;
    }

    .address-form .header .cancel-icon {
        font-size: 1.5rem;
        color: #ff4d4d;
        cursor: pointer;
    }

    /* Form Fields Container (Two Columns) */
    .row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 15px;
    }

    .col-md-6 {
        width: 48%;
    }

    /* Styling for Form Controls */
    .form-control {
        border-radius: 5px;
        padding: 10px;
        border: 1px solid #ccc;
        width: 100%;
        transition: border-color 0.3s ease;
    }

    .form-control:focus {
        border-color: #ffa500;
        outline: none;
        box-shadow: 0 0 5px rgba(255, 165, 0, 0.3);
    }

    /* Error Message Styling */
    .err-msg {
        color: red;
        font-size: 0.9rem;
        margin-top: -10px;
        margin-bottom: 10px;
        display: none;
    }

    /* Submit Button Styling */
    .address-form input[type="submit"] {
        background-color: #ffa500;
        color: white;
        font-weight: bold;
        font-size: 1.2rem;
        border: none;
        border-radius: 5px;
        padding: 15px;
        width: 100%;
        cursor: pointer;
        transition: background-color 0.3s ease;
        margin-top: 20px;
    }

    .address-form input[type="submit"]:hover {
        background-color: #ff8c00;
    }

    /* Responsive Layout for Small Screens */
    @media (max-width: 768px) {
        .row {
            flex-direction: column;
        }

        .col-md-6 {
            width: 100%;
            margin-bottom: 20px;
        }
    }
</style>

<div class="address-form">
    <div class="header">
        <h5>Add Address</h5>
        <button class="close-btn text-white" onclick="closeEditAddress()">&times;</button>
    </div>

    <form action="" onsubmit="addAddress(event)" novalidate method="POST">
        <div class="row">
            <div class="col-md-6">
                <select name="typeOfAddress" id="typeOfAddress" class="form-control">
                    <option value="" disabled selected>Type of Address</option>
                    <option value="Home">Home</option>
                    <option value="Office">Office</option>
                    <option value="Other">Other</option>
                </select>
                <div class="err-msg" id="err1"></div>
            </div>
            <div class="col-md-6">
                <input type="text" name="name" id="name" placeholder="Name" class="form-control">
                <div class="err-msg" id="err2"></div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <input type="text" name="country" id="country" placeholder="Country" class="form-control">
                <div class="err-msg" id="err3"></div>
            </div>
            <div class="col-md-6">
                <input type="text" name="state" id="state" placeholder="State" class="form-control">
                <div class="err-msg" id="err4"></div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <input type="number" name="pincode" id="pincode" placeholder="Pincode" class="form-control">
                <div class="err-msg" id="err5"></div>
            </div>
            <div class="col-md-6">
                <input type="text" name="phone" id="phone" placeholder="Phone" class="form-control">
                <div class="err-msg" id="err6"></div>
            </div>
        </div>

        <input type="hidden" value="<%= user %>" id="userId" name="userId">
        <input type="submit" value="Save Address" class="form-control">
    </form>
</div>


<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    
    function addAddress(event){
        event.preventDefault();
        const typeOfAddress = document.getElementById("typeOfAddress").value;
        const name = document.getElementById("name").value;
        const country = document.getElementById("country").value;
        const state = document.getElementById("state").value;
        const pincode = document.getElementById("pincode").value;
        const phone = document.getElementById("phone").value;
        const userId = document.getElementById("userId").value;
        const err1 = document.getElementById("err1");
        const err2 = document.getElementById("err2");
        const err3 = document.getElementById("err3");
        const err4 = document.getElementById("err4");
        const err5 = document.getElementById("err5");
        const err6 = document.getElementById("err6");
        
        console.log(typeOfAddress,name,country,state,pincode,phone)


        const typeOfAddressPattern = /^[A-Za-z\s]+$/;
        if(typeOfAddress.trim()===""){
            err1.style.display="block";
            err1.innerHTML="Please Enter The TypeOfAddress";
        }else if (!typeOfAddressPattern.test(typeOfAddress)){
            err1.style.display="block";
            err1.innerHTML="Only allowed alphebets";
        }else{
            err1.style.display="none";
            err1.innerHTML="";
        }

        const namePattern = /^[A-Za-z\s]+$/;
        if(name.trim()===""){
            err2.style.display="block";
            err2.innerHTML="Please Enter Your Name";
        }else if (!namePattern.test(name)){
            err2.style.display="block";
            err2.innerHTML="Only allowed alphebets";
        }else{
            err2.style.display="none";
            err2.innerHTML="";
        }


        const countryPattern = /^[A-Za-z\s]+$/;
        if(country.trim()===""){
            err3.style.display="block";
            err3.innerHTML="Please Enter Your Country";
        }else if (!countryPattern.test(country)){
            err3.style.display="block";
            err3.innerHTML="Only allowed alphebets";
        }else{
            err3.style.display="none";
            err3.innerHTML="";
        }

        const statePattern = /^[A-Za-z\s]+$/;
        if(state.trim()===""){
            err4.style.display="block";
            err4.innerHTML="Please Enter Your State";
        }else if (!statePattern.test(state)){
            err4.style.display="block";
            err4.innerHTML="Only allowed alphebets";
        }else{
            err4.style.display="none";
            err4.innerHTML="";
        }

        const pincodePattern = /^\d{6}$/;
        if(pincode.trim()===""){
            err5.style.display="block";
            err5.innerHTML="Please Enter Your Pincode";
        }else if (!pincodePattern.test(pincode)){
            err5.style.display="block";
            err5.innerHTML="Only allowed Numbers & Must Need Six Number";
        }else{
            err5.style.display="none";
            err5.innerHTML="";
        }

        const phnPattern = /^\d{10}$/;
        if(phone.trim()===""){
            err6.style.display="block";
            err6.innerHTML="Please Enter Your PhoneNumber";
        }else if (!phnPattern.test(phone)){
            err6.style.display="block";
            err6.innerHTML="Invalid Number";
        }else{
            err6.style.display="none";
            err6.innerHTML="";
        }

        if(err1.innerHTML || err2.innerHTML || err3.innerHTML || err4.innerHTML || err5.innerHTML || err6.innerHTML){
            return false;
        }
        

        
    fetch("/user/addAddress",{
    method:"POST",
    headers:{
        'Content-Type':'application/json'
    },
    body:JSON.stringify({typeOfAddress,name,country,state,pincode,phone,userId})
   })
   .then((response)=> response.json())
   .then((response)=>{
    if(response.success){
        Swal.fire({
            icon:"success",
            title:"Add NewAddress",
            text:response.message,
            showCancelButton:false,
            showConfirmButton:false,
            timer:1500,
        }).then(()=>{
            window.location.href="/user/checkout-page";
        })
    }else{
        Swal.fire({
            icon:"error",
            title:"Faild To AddAddress",
            text:response.message,
            showCancelButton:false,
            showConfirmButton:false,
            timer:1500,
        })
    }
   })
   .catch((err) => {
    Swal.fire({
        icon: "error",
        title: "ERROR",
        text: err.message || "An unexpected error occurred.",
        showCancelButton: false,
        showConfirmButton: false,
        timer: 1500,
    });
});


    }
    
 function closeEditAddress() {
    window.history.back();
  }
</script>