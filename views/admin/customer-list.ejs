
<%- include("../partials/admin/header.ejs") %> 

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<section class="content-main">
    <div class="content-header">
        <h2 class="content-title">Customers</h2>
    </div>
    <div class="card mb-4">
        <header class="card-header">
            <div class="row gx-3">
                <!-- Search bar on the left side -->
                <div class="col-lg-4 col-md-6 me-auto">
                    <form action="/admin/list-customer" method="get">
                        <div class="input-group">
                            <input type="text" name="search" placeholder="Search..." class="form-control">
                            <button type="submit" class="btn btn-secondary">Search</button>
                        </div>
                    </form>
                </div>
                

                <!-- Add new button moved further right -->
                <div class="col-lg-2 col-md-6 ms-auto" style="text-align: right;">
                    <button class="btn btn-sm btn-secondary">
                        <a href="/admin/addCustomer" style="color: white; text-decoration: none;">Add new</a>
                    </button>
                </div>
            </div>
        </header> <!-- card-header end// -->
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Customers</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Action</th>
                            <th>Registered</th>
                            <th class="text-end">Delete</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% for(let i = 0; i < customer.length; i++) { %>
                        <tr>
                            <td><%= customer[i].name %></td>
                            <td><%= customer[i].email %></td>
                            <td><%= customer[i].phone %></td>
                            <td>
                                <% if (customer[i].isBlocked === false) { %>
                                    <button class="btn btn-sm btn-danger">
                                        <a onclick="blockCustomer(event,'<%= customer[i]._id %>')" style="color: white; text-decoration: none;">Block</a>
                                    </button>
                                <% } else { %>
                                    <button class="btn btn-sm btn-success">
                                        <a onclick="unblockCustomer(event,'<%= customer[i]._id %>')"  style="color: white; text-decoration: none;">UnBlocked</a>
                                    </button>
                                <% } %>
                            </td>
                            <td><%= new Date(customer[i].createdAt).toLocaleDateString('en-GB') %></td>
                            <td class="text-end">
                                <button class="btn btn-sm btn-danger" onclick="return confirmDeletion(event)">
                                    <a href="/admin/deleteCustomer?id=<%= customer[i]._id %>" style="color: white; text-decoration: none;">Delete</a>
                                </button>
                            </td>
                        </tr>
                        <% } %>
                    </tbody>
                </table> <!-- table-responsive.// -->
            </div>
        </div> <!-- card-body end// -->
    </div> <!-- card end// -->
</section>

<script>

function blockCustomer(event,id){
    event.preventDefault()
    Swal.fire({
        title: "Are you sure?",
        text: "Do you want to block this customer?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Yes, block!",
        cancelButtonText: "No, cancel!",
    }).then((result) => {
        if (result.isConfirmed) {
            // If confirmed, proceed with the fetch request
            fetch(`/admin/blockCustomer?id=${id}`, {
                method: "GET",
                headers: {
                    "Content-Type": "application/json",
                },
            })
                .then((res) => res.json()) // Ensure response is converted to JSON
                .then((data) => {
                    if (data.success) {
                        Swal.fire({
                            icon: "success",
                            title: "Customer Blocked!",
                            showCancelButton: false,
                            showConfirmButton: false,
                            timer: 1500, // Auto close after 1.5 seconds
                        });
                        window.location.reload()
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Failed to Block Customer",
                            showCancelButton: false,
                            showConfirmButton: false,
                            timer: 1500, // Auto close after 1.5 seconds
                        });
                    }
                })
                .catch((error) => {
                    console.error("Error:", error);
                    Swal.fire({
                        icon: "error",
                        title: "An error occurred",
                        text: "Please try again later.",
                        showCancelButton: false,
                        showConfirmButton: true,
                    });
                });
        } else {
            // If canceled, display an optional message
            Swal.fire({
                icon: "info",
                title: "Action Cancelled",
                showCancelButton: false,
                showConfirmButton: true,
            });
        }
    });
}

function unblockCustomer(event,id){
    event.preventDefault()
    Swal.fire({
        title: "Are you sure?",
        text: "Do you want to block this customer?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Yes, block!",
        cancelButtonText: "No, cancel!",
    }).then((result) => {
        if (result.isConfirmed) {
            // If confirmed, proceed with the fetch request
            fetch(`/admin/unblockCustomer?id=${id}`, {
                method: "GET",
                headers: {
                    "Content-Type": "application/json",
                },
            })
                .then((res) => res.json()) // Ensure response is converted to JSON
                .then((data) => {
                    if (data.success) {
                        Swal.fire({
                            icon: "success",
                            title: "Customer unBlocked!",
                            showCancelButton: false,
                            showConfirmButton: false,
                            timer: 1500, // Auto close after 1.5 seconds
                        });
                        window.location.reload()
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Failed to unBlock Customer",
                            showCancelButton: false,
                            showConfirmButton: false,
                            timer: 1500, // Auto close after 1.5 seconds
                        });
                    }
                })
                .catch((error) => {
                    console.error("Error:", error);
                    Swal.fire({
                        icon: "error",
                        title: "An error occurred",
                        text: "Please try again later.",
                        showCancelButton: false,
                        showConfirmButton: true,
                    });
                });
        } else {
            // If canceled, display an optional message
            Swal.fire({
                icon: "info",
                title: "Action Cancelled",
                showCancelButton: false,
                showConfirmButton: true,
            });
        }
    });
}

    // Colorful and custom confirmation alert
    function confirmDeletion(event) {
        event.preventDefault(); // Prevents the default link action (so we can show the alert)
        
        const deleteLink = event.target.closest('a'); // Find the link that triggered the event

        Swal.fire({
            title: 'Are you sure?',
            text: "This will permanently delete the customer!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true,
            background: '#f8f9fa',  // Light background
            confirmButtonColor: '#d33', // Red color for confirmation button
            cancelButtonColor: '#3085d6', // Blue color for cancel button
            preConfirm: () => {
                // If confirmed, follow the link to delete the customer
                window.location.href = deleteLink.href;
            }
        });
    }
</script>


<%- include("../partials/admin/footer.ejs") %>
